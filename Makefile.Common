SHELL := /usr/bin/env bash

#################################################################################
# Platform detection
#################################################################################
ifeq ($(OS),Windows_NT)
	HOST_OS ?= Windows_NT
	ifeq ($(PROCESSOR_ARCHITEW6432),AMD64)
		HOST_ARCH ?= AMD64
	else
		ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
			HOST_ARCH ?= AMD64
		endif
		ifeq ($(PROCESSOR_ARCHITECTURE),x86)
			HOST_ARCH ?= x86
		endif
	endif

	ifeq ($(HOST_ARCH),)
		ifneq ($(PROCESSOR_ARCHITEW6432),)
			UNSUPPORTED_ARCH := $(PROCESSOR_ARCHITEW6432)
		else
			UNSUPPORTED_ARCH := $(PROCESSOR_ARCHITECTURE)
		endif
	endif
else
	UNAME_S ?= $(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		HOST_OS ?= Linux
	endif
	ifeq ($(UNAME_S),Darwin)
		HOST_OS ?= Darwin
	endif

	UNAME_M := $(shell uname -m)
	ifeq ($(UNAME_M),x86_64)
		HOST_ARCH ?= AMD64
	endif
	ifeq ($(UNAME_M),aarch64)
		HOST_ARCH ?= ARM64
	endif
	ifeq ($(UNAME_M),arm64)
		HOST_ARCH ?= ARM64
	endif

	ifeq ($(HOST_ARCH),)
		UNSUPPORTED_OS := $(UNAME_S)
	endif
	ifeq ($(HOST_ARCH),)
		UNSUPPORTED_ARCH := $(UNAME_M)
	endif
endif

ifeq ($(HOST_OS),)
$(error Unsupported operating system: $(UNSUPPORTED_OS))
endif
ifeq ($(HOST_ARCH),)
$(error Unsupported architecture: $(UNSUPPORTED_ARCH))
endif

ifneq ($(DEBUG),)
$(info Platform detected: $(HOST_OS)/$(HOST_ARCH))
endif
