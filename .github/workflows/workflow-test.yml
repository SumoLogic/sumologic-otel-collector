name: Run tests

on:
  workflow_call:
    inputs:
      arch_os:
        description: Architecture and OS in the form "{arch}_{os}". See GOARCH and GOOS for accepted values.
        default: linux_amd64
        type: string
      runs-on:
        default: ubuntu-20.04
        type: string
      only-if-changed:
        description: Run only if relevant files changed.
        default: false
        type: boolean
      save-cache:
        description: Save the module and build caches.
        default: false
        type: boolean

defaults:
  run:
    shell: bash

env:
  GO_VERSION: "1.20.5"

jobs:
  test:
    name: Test
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v3

      - name: Check if test related files changed
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/go.mod
            **/go.sum
            **/*.go
            **/*.yaml
            **/*.yml
            **/Makefile
            **/Makefile.common
            scripts/install.sh

      - name: Setup go
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Get GOCACHE and GOMODCACHE
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> "$GITHUB_ENV"
          echo "GOCACHE=$(go env GOCACHE)" >> "$GITHUB_ENV"

      - name: Get cache key
        id: get-cache-key
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          echo "cache-key=go-test-${{ env.GO_VERSION }}-${{inputs.arch_os}}${BORINGCRYPTO_SUFFIX}-${{ hashFiles('pkg/**/go.sum', 'otelcolbuilder/.otelcol-builder.yaml') }}" >> $GITHUB_OUTPUT
          echo "restore-keys=go-test-${{ env.GO_VERSION }}-${{inputs.arch_os}}${BORINGCRYPTO_SUFFIX}-" >> $GITHUB_OUTPUT

      - uses: actions/cache/restore@v3
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        with:
          path: |
            ${{ env.GOMODCACHE }}/cache
            ${{ env.GOCACHE }}
          key: ${{ steps.get-cache-key.outputs.cache-key }}
          restore-keys: |
            ${{ steps.get-cache-key.outputs.restore-keys }}

      - name: Set default BUILDER_BIN_PATH
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        run: echo "BUILDER_BIN_PATH=${HOME}/bin" >> $GITHUB_ENV

      - name: Add opentelemetry-collector-builder installation dir to PATH
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        run: echo "$BUILDER_BIN_PATH" >> $GITHUB_PATH

      - name: Run package tests
        if: ${{ ! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true' }}
        run: make gotest

      - uses: actions/cache/save@v3
        if: ${{ inputs.save-cache && (! inputs.only-if-changed || steps.changed-files.outputs.any_changed == 'true') }}
        with:
          path: |
            ${{ env.GOMODCACHE }}/cache
            ${{ env.GOCACHE }}
          key: ${{ steps.get-cache-key.outputs.cache-key }}
