name: PRs checks

permissions:
  contents: read

on:
  pull_request:
    branches:
      - "**"

defaults:
  run:
    shell: bash

env:
  GO_VERSION: "1.24.5"

jobs:
  build-changed:
    runs-on: ubuntu-24.04
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if build related files changed
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/go.mod
            **/go.sum
            **/*.go
            **/*.yaml
            **/*.yml
            **/Makefile
            **/Makefile.common
            **/Dockerfile*

  markdownlint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check if related files changed
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.md
      - uses: actions/setup-node@v4
        if: steps.changed-files.outputs.any_changed == 'true'
      - name: Install markdownlint
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make install-markdownlint
      - name: Markdownlint check
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make markdownlint

  yamllint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install yamllint
        run: pip install yamllint
      - name: yamllint
        run: make yamllint

  markdown-link-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check if related files changed
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.md
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          config-file: ".markdown_link_check.json"
          use-quiet-mode: yes
          check-modified-files-only: yes
          base-branch: ${{ github.base_ref }}

  md-links-lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check if related files changed
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.md
      - name: Lint markdown links
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          make markdown-links-lint

  plugins-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
      - name: Check plugins in README and builder config
        run: ./ci/plugins_check.sh

  pre-commit-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  check-uniform-dependencies:
    name: Check uniform dependencies
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Check uniform dependencies
        run: make check-uniform-dependencies

  shellcheck:
    runs-on: ubuntu-24.04
    env:
      SHELLCHECK_VERSION: 0.10.0
    steps:
      - uses: actions/checkout@v4
      - name: install shellcheck
        run: |
          curl --retry 10 --retry-max-time 120 --retry-delay 5 -Lo- https://github.com/koalaman/shellcheck/releases/download/v${{ env.SHELLCHECK_VERSION }}/shellcheck-v${{ env.SHELLCHECK_VERSION }}.linux.x86_64.tar.xz | tar -xJf -
          sudo cp shellcheck-v${{ env.SHELLCHECK_VERSION }}/shellcheck /usr/local/bin && rm -rf shellcheck-v${{ env.SHELLCHECK_VERSION }}
      - name: shellcheck
        run: make shellcheck

  test-otelcol:
    name: Test (otelcol)
    if: needs.build-changed.outputs.any_changed == 'true'
    uses: ./.github/workflows/workflow-test-otelcol.yml
    needs:
      - build-changed
      - determine-build-info
    with:
      go-version: ${{ needs.determine-build-info.outputs.go-version }}

  test-otelcol-config:
    name: Test (otelcol-config)
    uses: ./.github/workflows/workflow-test-otelcol-config.yml
    needs:
      - determine-build-info
    with:
      go-version: ${{ needs.determine-build-info.outputs.go-version }}

  lint:
    name: Lint (staticcheck)
    runs-on: ubuntu-24.04
    needs: [build-changed]
    if: needs.build-changed.outputs.any_changed == 'true'
    strategy:
      matrix:
        platform: ["linux_amd64"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Get GOCACHE and GOMODCACHE
        run: |
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> "$GITHUB_ENV"
          echo "GOCACHE=$(go env GOCACHE)" >> "$GITHUB_ENV"

      - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ${{ env.GOMODCACHE }}/cache
            ${{ env.GOCACHE }}
          key: go-test-${{ env.GO_VERSION }}-${{matrix.platform}}-${{ hashFiles('pkg/**/go.sum', 'otelcolbuilder/.otelcol-builder.yaml') }}
          restore-keys: |
            go-test-${{ env.GO_VERSION }}-${{matrix.platform}}-

      - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            /home/runner/.cache/staticcheck
          key: staticcheck-${{ env.GO_VERSION }}-${{matrix.platform}}-${{ hashFiles('pkg/**/go.sum', 'otelcolbuilder/.otelcol-builder.yaml') }}
          restore-keys: |
            staticcheck-${{ env.GO_VERSION }}-${{matrix.platform}}-

      - name: Install staticcheck
        run: make install-staticcheck

      - name: Add opentelemetry-collector-builder installation dir to PATH
        run: echo "$HOME/bin" >> "$GITHUB_PATH"

      - name: Run staticcheck
        run: make golint

  determine-build-info:
    name: Build Info
    uses: ./.github/workflows/workflow-determine-build-info.yml

  build-otelcol:
    name: Build - Collector
    uses: ./.github/workflows/workflow-build-otelcol.yml
    needs:
      - determine-build-info
    with:
      go-version: ${{ needs.determine-build-info.outputs.go-version }}
      version: ${{ needs.determine-build-info.outputs.version-with-sha }}
    secrets: inherit

  build-otelcol-config:
    name: Build - Config Tool
    uses: ./.github/workflows/workflow-build-otelcol-config.yml
    needs:
      - determine-build-info
    with:
      go-version: ${{ needs.determine-build-info.outputs.go-version }}
    secrets: inherit
