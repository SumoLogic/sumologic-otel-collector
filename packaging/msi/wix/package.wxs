<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui" xmlns:netfx="http://wixtoolset.org/schemas/v4/wxs/netfx">

  <?include variables.wxi ?>

  <Package Name="!(loc.ApplicationFullName)" Manufacturer="!(loc.ManufacturerName)" Version="$(ProductVersion)" UpgradeCode="$(UpgradeCode)" Scope="perMachine">
    <SummaryInformation Description="!(loc.ProductDescription)" />

    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" AllowDowngrades="no" IgnoreLanguage="yes" />

    <MediaTemplate EmbedCab="yes" />

    <!--
        Launch conditions, restrict to Windows 7 or later
        https://msdn.microsoft.com/en-us/library/windows/desktop/aa370556(v=vs.85).aspx
    -->
    <Launch Condition="Installed or (VersionNT &gt;= 601)" Message="!(loc.OS2Old)" />

    <!-- UI customization -->
    <WixVariable Id="WixUIBannerBmp" Value="!(bindpath.assets)\banner_background.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="!(bindpath.assets)\dialog_background.bmp" />
    <WixVariable Id="WixUILicenseRtf" Value="!(bindpath.assets)\LICENSE.rtf" />

    <!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
    <Icon Id="Icon.exe" SourceFile="!(bindpath.assets)\project.ico" />

    <!-- Set properties for Programs & Features (Add/Remove Programs) -->
    <Property Id="ARPPRODUCTICON" Value="Icon.exe" />
    <Property Id="ARPHELPLINK" Value="https://sumologic.com" />
    <Property Id="ARPURLINFOABOUT" Value="https://sumologic.com/"/>

    <!-- Remove repair install option -->
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />

    <!-- Remove modify install option -->
    <SetProperty Id="ARPNOMODIFY" Value="1" After="InstallValidate" Sequence="execute" />

    <!-- <Property Id="RegKeyPath" Value="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationFullName)" /> -->

    <!--
        Determine the program directory of a previous installation (if one exists)
        If not, INSTALLFOLDER stays empty
    -->
    <Property Id="INSTALLFOLDER">
      <RegistrySearch Id="DetermineInstallLocation" Type="directory" Root="HKLM" Key="$(RegKeyPath)" Name="InstallLocation" />
    </Property>

    <!--
        Determine the app data directory of a previous installation (if one exists)
        If not, APPDATAFOLDER stays empty
    -->
    <Property Id="APPDATAFOLDER">
      <RegistrySearch Id="DetermineAppDataLocation" Type="directory" Root="HKLM" Key="$(RegKeyPath)" Name="AppDataLocation" />
    </Property>

    <!--
        Determine the INSTALLATIONTOKEN of a previous installation (if one exists)
        If not, INSTALLATIONTOKEN stays empty
    -->
    <Property Id="INSTALLTOKEN" Hidden="yes" />
    <Property Id="INSTALLATIONTOKEN" Hidden="yes" />
    <!-- TODO: fix permissions to allow securely storing secrets in the registry -->
    <!-- <Property Id="INSTALLATIONTOKEN"> -->
    <!--   <RegistrySearch Id="DetermineInstallationToken" Type="raw" Root="HKLM" Key="$(RegKeyPath)" Name="InstallationToken" /> -->
    <!-- </Property> -->

    <!--
        Determine the TAGS of a previous installation (if one exists)
        If not, TAGS stays empty
    -->
    <Property Id="TAGS" Hidden="yes" />
    <!-- TODO: fix permissions to allow securely storing secrets in the registry -->
    <!-- <Property Id="TAGS"> -->
    <!--   <RegistrySearch Id="DetermineTags" Type="raw" Root="HKLM" Key="$(RegKeyPath)" Name="Tags" /> -->
    <!-- </Property> -->

    <!-- Whether or not the remotely managed and ephemeral features are selected -->
    <Property Id="REMOTELYMANAGEDSELECTED" Value="false" Hidden="yes" />
	<Property Id="EPHEMERALSELECTED" Value="false" Hidden="yes" />

    <!-- The API base URL if overriden -->
    <Property Id="API" Hidden="yes" />

    <!-- UI Properties -->
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />

    <!-- The service arguments, to be updated in teh UpdateConfigAction if necessary -->
    <Property Id="SERVICEARGUMENTS" Value="empty" Hidden="yes"/>

    <!-- Custom Actions -->
    <CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLFOLDER]" />

    <Binary Id="SumoLogicDll" SourceFile="$(SumoLogic.TargetDir)\SumoLogic.wixext.CA.dll" />
    <CustomAction Id="PopulateServiceArgumentsAction" BinaryRef="SumoLogicDll" DllEntry="PopulateServiceArguments"
      Return="check" Impersonate="no" />
	<CustomAction Id="UpdateConfigAction" BinaryRef="SumoLogicDll" DllEntry="UpdateConfig" Execute="deferred"
	  Return="check" Impersonate="no" />
	<!-- Split the properties into multiple sections and merge them to avoid size limit -->
    <CustomAction Id="UpdateConfigActionData1" Property="UpdateConfigAction1"
      Value="CommonConfigPath=[ConfigFragmentsFolder]common.yaml;SumoLogicConfigPath=[ConfigFolder]sumologic.yaml;InstallToken=[INSTALLTOKEN];InstallationToken=[INSTALLATIONTOKEN]" />
    <CustomAction Id="UpdateConfigActionData2" Property="UpdateConfigAction2"
      Value="Tags=[TAGS];OpAmpFolder=[OpAmpFolder];Ephemeral=[EPHEMERALSELECTED];RemotelyManaged=[REMOTELYMANAGEDSELECTED];Api=[API]" />
    <CustomAction Id="UpdateConfigActionData" Property="UpdateConfigAction" Value="[UpdateConfigAction1];[UpdateConfigAction2]" />

    <!-- Before updating the config files set the properties indicating whether or not the remotely managed and ephemeral features are selected -->
    <SetProperty Id="REMOTELYMANAGEDSELECTED" Value="true" Sequence="execute" Before="UpdateConfigActionData"  Condition="&amp;REMOTELYMANAGED=3" />
    <SetProperty Id="EPHEMERALSELECTED" Value="true" Sequence="execute" Before="UpdateConfigActionData" Condition="&amp;EPHEMERAL=3" />

    <!-- Execute Sequence -->
    <InstallExecuteSequence>
      <!-- Determine the install location after the install path has been validated -->
      <Custom Action="SetARPINSTALLLOCATION" After="InstallValidate" />

      <!-- Update service arguments before the service is installed -->
      <Custom Action="PopulateServiceArgumentsAction" Before="InstallServices" Condition="NOT REMOVE" />

      <!-- Run config updating before the service is installed -->
      <Custom Action="UpdateConfigAction" Before="InstallServices" Condition="NOT REMOVE" />
      <Custom Action="UpdateConfigActionData" Before="UpdateConfigAction" Condition="NOT REMOVE" />
      <Custom Action="UpdateConfigActionData1" Before="UpdateConfigActionData" Condition="NOT REMOVE" />
      <Custom Action="UpdateConfigActionData2" Before="UpdateConfigActionData" Condition="NOT REMOVE" />
    </InstallExecuteSequence>

    <!-- Features -->
    <Feature Id="Main" ConfigurableDirectory="INSTALLFOLDER" Title="OpenTelemetry Collector" AllowAbsent="no" AllowAdvertise="yes" Display="expand">
      <ComponentGroupRef Id="AppDataComponents" />
      <ComponentGroupRef Id="ProgramComponents" />

      <Feature Id="HOSTMETRICS" Title="Collect Host Metrics" Level="2" AllowAbsent="yes" AllowAdvertise="yes" TypicalDefault="advertise">
        <ComponentGroupRef Id="HostMetricsComponents" />
      </Feature>

      <Feature Id="REMOTELYMANAGED" Title="Remotely Managed" Level="2" AllowAbsent="yes" AllowAdvertise="no" TypicalDefault="install" >
        <Component Id="RemotelyManagedComponent" Location="local" Directory="INSTALLFOLDER" Guid="5169967a-f9e9-43f7-abb4-6b69273932a3" />
      </Feature>

      <Feature Id="EPHEMERAL" Title="Ephemeral" Level="2" AllowAbsent="yes" AllowAdvertise="no" TypicalDefault="install" >
        <Component Id="EphemeralComponent" Location="local" Directory="INSTALLFOLDER" Guid="4095b4ee-d011-49c3-b7a7-755aa36fcc5e" />
      </Feature>
    </Feature>

    <!-- UI -->
    <UI>
      <ui:WixUI Id="WixUI_OtelcolSumo" />

      <Error Id="9001" Message="!(loc.Error9001)" />
      <Error Id="9002" Message="!(loc.Error9002)" />
    </UI>
  </Package>

</Wix>
