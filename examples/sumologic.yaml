## This file is generated automatically and shouldn't be changed
## All modifications should be put as separate files in conf.d subdirectory
extensions:
  ## Configuration for Sumo Logic Extension
  ## Manages registration, heartbeats and authentication to Sumo Logic
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/extension/sumologicextension
  sumologic:
    installation_token: ${SUMOLOGIC_INSTALLATION_TOKEN}
    collector_credentials_directory: /var/lib/otelcol-sumo/credentials
    api_base_url: https://long-open-events.sumologic.net/
    collector_name: chan-tim-testing_tier2ToTier1

  ## Configuration for Health Check Extension
  ## Health Check extension enables an HTTP url that can be probed to check the status of the OpenTelemetry Collector
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/healthcheckextension
  health_check:
    endpoint: localhost:13133

  ## Configuration for File Storage Extension
  ## The File Storage extension can persist state to the local file system
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/storage/filestorage
  file_storage:
    compaction:
      directory: /var/lib/otelcol-sumo/file_storage
      on_rebound: true
    directory: /var/lib/otelcol-sumo/file_storage

  ## Configuration for OpAMP Extension
  ## The OpAMP extension remotely manages collector configuration.
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/extension/opampextension
  opamp:
    remote_configuration_directory: /etc/otelcol-sumo/opamp.d
    endpoint: wss://opamp-events.sumologic.com/v1/opamp

receivers:
  ## Configuration for OTLP Receiver
  ## Receives data via gRPC or HTTP using OTLP format.
  ## ref: https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver
  otlp:
    protocols:
      grpc:
        endpoint: localhost:4317
      http:
        endpoint: localhost:4318
  postgresql:
    endpoint: localhost:5432
    transport: tcp
    username: timothy.chan
    password: postgrestest
    databases:
      - my_database
      - postgres
      - pg_stat_database
    collection_interval: 180s
    tls:
      insecure: true
      insecure_skip_verify: true

  mongodb:
    hosts:
      - endpoint: localhost:27017 # primary
    #   - endpoint: localhost:27018
    #   - endpoint: localhost:27019
    # replica_set: rs0
    collection_interval: 1s
    tls:
      insecure: true
      insecure_skip_verify: true      

exporters:
  ## Configuration for Sumo Logic Exporter
  ## This exporter supports sending logs, metrics and traces data to Sumo Logic.
  ## ref: https://github.com/SumoLogic/sumologic-otel-collector/tree/main/pkg/exporter/sumologicexporter
  sumologic:
    sending_queue:
      enabled: true
      storage: file_storage
    retry_on_failure:
        max_elapsed_time: 0
  logging:
    verbosity: detailed

processors:
  ## Configuration for Memory Limiter Processor
  ## The memory_limiter processor is used to prevent out of memory situations on the collector.
  ## ref: https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor
  memory_limiter:
    ## check_interval is the time between measurements of memory usage for the
    ## purposes of avoiding going over the limits. Defaults to zero, so no
    ## checks will be performed. Values below 1 second are not recommended since
    ## it can result in unnecessary CPU consumption.
    check_interval: 5s
    ## Maximum amount of memory, in %, targeted to be allocated by the process heap.
    limit_percentage: 75
    ## Spike limit (calculated from available memory). Must be less than limit_percentage.
    spike_limit_percentage: 20

  ## Configuration for Batch Processor
  ## The batch processor accepts records and places them into batches grouped by node and resource
  ## ref: https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/batchprocessor
  batch:
    ## Number of records after which a batch will be sent regardless of time
    send_batch_size: 1_024
    ## Time duration after which a batch will be sent regardless of size
    timeout: 1s

  ## Configuration for Sumo Logic Schema Processor
  ## The Sumo Logic Schema processor modifies the metadata on logs, metrics and traces sent to Sumo Logic
  ## so that the Sumo Logic apps can make full use of the ingested data.
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/sumologicprocessor
  sumologic:

  ## Configuration for Resource Detection Processor
  ## The resource detection processor can be used to detect resource information from the host, in a format that conforms to the
  ## OpenTelemetry resource semantic conventions, and append or override the resource value in telemetry data with this information.
  ## ref: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor
  resourcedetection/system:
    detectors: ["system", "ec2", "gcp", "azure"]
    system:
      hostname_sources: ["dns","os"]

  # cascading_filter:
  #   collector_instances: 1
  #   decision_wait: 10s
  #   num_traces: 100
  #   expected_new_traces_per_sec: 10
  #   spans_per_second: 1000
  #   prior_spans_rate: 600
  #   history_size: 100
  #   probabilistic_filtering_ratio: 0.1
  #   trace_reject_filters:
  #     - name: remove-all-root-span-error
  #       status_code: "Error"


service:
  extensions:
    - sumologic
    - health_check
    - file_storage
  telemetry:
    metrics:
      address: localhost:8888
    # logs:
    #   level: "debug"

  pipelines:
    metrics/default:
      receivers:
        - otlp
        # - postgresql
        - mongodb
      processors:
        - memory_limiter
        - batch
        - sumologic
      exporters:
        - sumologic
        - logging
    # logs/default:
    #   receivers:
    #     - otlp
    #   processors:
    #     - memory_limiter
    #     - batch
    #     - sumologic
    #   exporters:
    #     - sumologic
    #     - logging
    # traces/default:
    #   receivers:
    #     - otlp
    #     - zipkin
    #   processors:
    #     # - memory_limiter
    #     # - batch
    #     # - cascading_filter
    #     # - sumologic
    #   exporters:
    #     - sumologic
    #     - logging
