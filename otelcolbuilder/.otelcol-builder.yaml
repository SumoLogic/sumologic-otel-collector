dist:
  name: otelcol-sumo
  description: Sumo Logic OpenTelemetry Collector distribution

  # the module name for the new distribution, following Go mod conventions. Optional, but recommended.
  module: github.com/SumoLogic/sumologic-otel-collector

  # the OpenTelemetry Collector version to use as base for the distribution.
  otelcol_version: 0.48.0
  # the path to write the output (sources and binary).
  output_path: ./cmd

exporters:
  # Exporters with non-upstreamed changes:
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/exporter/sumologicexporter v0.0.0-00010101000000-000000000000"
    path: ./../pkg/exporter/sumologicexporter

  # Upstream exporters:

  # Since include-code was removed we need to manually add all core components that we want to include:
  # https://github.com/open-telemetry/opentelemetry-collector/pull/4616
  - import: go.opentelemetry.io/collector/exporter/loggingexporter
    gomod: go.opentelemetry.io/collector v0.48.0
  - import: go.opentelemetry.io/collector/exporter/otlpexporter
    gomod: go.opentelemetry.io/collector v0.48.0
  - import: go.opentelemetry.io/collector/exporter/otlphttpexporter
    gomod: go.opentelemetry.io/collector v0.48.0

  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/exporter/carbonexporter v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/exporter/fileexporter v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/exporter/kafkaexporter v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/exporter/loadbalancingexporter v0.48.0"

processors:
  # Processors with non-upstreamed changes:
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/processor/cascadingfilterprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/cascadingfilterprocessor
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/k8sprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/k8sprocessor
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/processor/sourceprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/sourceprocessor
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/processor/sumologicschemaprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/sumologicschemaprocessor
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/processor/sumologicsyslogprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/sumologicsyslogprocessor
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/processor/metricfrequencyprocessor v0.0.0-00010101000000-000000000000"
    path: ./../pkg/processor/metricfrequencyprocessor

  # Upstream processors:

  # Since include-code was removed we need to manually add all core components that we want to include:
  # https://github.com/open-telemetry/opentelemetry-collector/pull/4616
  - import: go.opentelemetry.io/collector/processor/batchprocessor
    gomod: go.opentelemetry.io/collector v0.48.0
  - import: go.opentelemetry.io/collector/processor/memorylimiterprocessor
    gomod: go.opentelemetry.io/collector v0.48.0

  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/attributesprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/filterprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/groupbyattrsprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/groupbytraceprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/metricstransformprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/probabilisticsamplerprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/resourcedetectionprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/resourceprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/routingprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/spanmetricsprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/spanprocessor v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/processor/tailsamplingprocessor v0.48.0"

receivers:
  # Receivers with non-upstreamed changes:
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/receiver/telegrafreceiver v0.0.0-00010101000000-000000000000"
    path: ./../pkg/receiver/telegrafreceiver

  # Upstream receivers:

  # Since include-code was removed we need to manually add all core components that we want to include:
  # https://github.com/open-telemetry/opentelemetry-collector/pull/4616
  - import: go.opentelemetry.io/collector/receiver/otlpreceiver
    gomod: go.opentelemetry.io/collector v0.48.0

  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/awscontainerinsightreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/awsecscontainermetricsreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/awsxrayreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/carbonreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/collectdreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/dockerstatsreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/dotnetdiagnosticsreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/filelogreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/fluentforwardreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/googlecloudspannerreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/hostmetricsreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/jaegerreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/jmxreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/journaldreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/kafkametricsreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/kafkareceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/opencensusreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/podmanreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/receivercreator v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/redisreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sapmreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/signalfxreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/simpleprometheusreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/splunkhecreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/statsdreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/syslogreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/tcplogreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/udplogreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/wavefrontreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/windowsperfcountersreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/zipkinreceiver v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/receiver/zookeeperreceiver v0.48.0"

extensions:
  # Processors with non-upstreamed changes:
  - gomod: "github.com/SumoLogic/sumologic-otel-collector/pkg/extension/sumologicextension v0.0.0-00010101000000-000000000000"
    path: ./../pkg/extension/sumologicextension

  # Since include-code was removed we need to manually add all core components that we want to include:
  # https://github.com/open-telemetry/opentelemetry-collector/pull/4616
  - import: go.opentelemetry.io/collector/extension/ballastextension
    gomod: go.opentelemetry.io/collector v0.48.0
  - import: go.opentelemetry.io/collector/extension/zpagesextension
    gomod: go.opentelemetry.io/collector v0.48.0

  # Upstream receivers:
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/bearertokenauthextension v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/healthcheckextension v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/oidcauthextension v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/pprofextension v0.48.0"
  - gomod: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/storage v0.48.0"
    import: "github.com/open-telemetry/opentelemetry-collector-contrib/extension/storage/filestorage"


# Replacement paths are relative to the output_path (location of source files)
replaces:
  # This is needed because of:
  # failed to download go modules: exit status 1.
  # Output: "go: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/filelogreceiver@v0.48.0 requires
  #  github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza@v0.0.0-00010101000000-000000000000: invalid version: unknown revision 000000000000"
  - github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza => github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza v0.48.0

  # ----------------------------------------------------------------------------
  # Needed for telegrafreceiver
  - github.com/influxdata/telegraf => github.com/SumoLogic/telegraf v1.22.0-sumo-2

  # TODO: remove this when:
  # - regexp log filtering is released upstream:
  #   PR: https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/5680
  # - expr log filtering is merged and released upstream:
  #   PR: https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/5680
  # - support for regexp for delete and hash actions for attribute attraction
  #   PR: https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/5750
  #
  # For now, cherry-picked changes are being used:
  # commit: https://github.com/SumoLogic/opentelemetry-collector-contrib/commit/bdf80f94cd989542c4e550b58569674f226c31d0
  # branch: https://github.com/SumoLogic/opentelemetry-collector-contrib/tree/v0.48.0-filterprocessor
  - github.com/open-telemetry/opentelemetry-collector-contrib/processor/filterprocessor => github.com/SumoLogic/opentelemetry-collector-contrib/processor/filterprocessor bdf80f94cd989542c4e550b58569674f226c31d0
  - github.com/open-telemetry/opentelemetry-collector-contrib/internal/coreinternal => github.com/SumoLogic/opentelemetry-collector-contrib/internal/coreinternal bdf80f94cd989542c4e550b58569674f226c31d0
  - github.com/open-telemetry/opentelemetry-collector-contrib/processor/attributesprocessor => github.com/SumoLogic/opentelemetry-collector-contrib/processor/attributesprocessor bdf80f94cd989542c4e550b58569674f226c31d0
  - github.com/open-telemetry/opentelemetry-collector-contrib/processor/resourceprocessor => github.com/SumoLogic/opentelemetry-collector-contrib/processor/resourceprocessor bdf80f94cd989542c4e550b58569674f226c31d0

  # Google renamed their org from `googleapis` to `google`, and for `gnostic` this happened in v0.5.6
  # However, kubernetes/client-go still uses the old name for v0.5.5, and this causes go mod to complain
  # Replace this here instead of modifying indirect dependencies in packages, as it's more robust
  - github.com/googleapis/gnostic => github.com/google/gnostic v0.5.5

  # Prevent a concurrent map iteration with go1.18:
  # fatal error: concurrent map iteration and map write
  #
  # goroutine 1 [running]:
  # runtime.throw({0x90b61ba?, 0x600015e?})
  #         runtime/panic.go:992 +0x71 fp=0xc0005c4730 sp=0xc0005c4700 pc=0x403be91
  # runtime.mapiternext(0x6000106?)
  #         runtime/map.go:871 +0x4eb fp=0xc0005c47a0 sp=0xc0005c4730 pc=0x401440b
  # reflect.mapiternext(0x6000106?)
  #         runtime/map.go:1378 +0x19 fp=0xc0005c47b8 sp=0xc0005c47a0 pc=0x4068d99
  # gonum.org/v1/gonum/graph/iterator.(*mapIter).next(0xc0007304b0)
  #         gonum.org/v1/gonum@v0.9.3/graph/iterator/map.go:94 +0x45 fp=0xc0005c47d8 sp=0xc0005c47b8 pc=0x70bdd05
  # gonum.org/v1/gonum/graph/iterator.(*Nodes).NodeSlice(0xc00071c990)
  #         gonum.org/v1/gonum@v0.9.3/graph/iterator/nodes_map.go:69 +0x8b fp=0xc0005c4858 sp=0xc0005c47d8 pc=0x70bdfab
  # gonum.org/v1/gonum/graph.NodesOf({0x9ad1328, 0xc00071c990})
  #         gonum.org/v1/gonum@v0.9.3/graph/nodes_edges.go:72 +0xb7 fp=0xc0005c48d8 sp=0xc0005c4858 pc=0x70ba5f7
  # gonum.org/v1/gonum/graph/topo.tarjanSCCstabilized({0x9ae0130, 0xc00071a360}, 0x0)
  #         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:97 +0x4c fp=0xc0005c49a0 sp=0xc0005c48d8 pc=0x7211e4c
  # gonum.org/v1/gonum/graph/topo.TarjanSCC(...)
  #         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:93
  # gonum.org/v1/gonum/graph/topo.Sort({0x9ae0130?, 0xc00071a360?})
  #         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:41 +0x25 fp=0xc0005c49d0 sp=0xc0005c49a0 pc=0x7211805
  # github.com/open-telemetry/opentelemetry-log-collection/pipeline.connectNodes(0xc00071a360)
  #         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/directed.go:134 +0x1ba fp=0xc0005c4ac0 sp=0xc0005c49d0 pc=0x721455a
  # github.com/open-telemetry/opentelemetry-log-collection/pipeline.NewDirectedPipeline({0xc0002a43c0, 0x4, 0x6})
  #         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/directed.go:208 +0x15b fp=0xc0005c4b28 sp=0xc0005c4ac0 pc=0x72154fb
  # github.com/open-telemetry/opentelemetry-log-collection/pipeline.Config.Build({{0x9aeb030, 0xc00074a090}, {0xc00071c510, 0x3, 0x3}}, 0x2?)
  #         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/config.go:83 +0x4c5 fp=0xc0005c4c98 sp=0xc0005c4b28 pc=0x7212ee5
  # github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza.createLogsReceiver.func1({0x0?, 0xffffffffff?}, {{0xc0000f5d40, {0x9a92fc0, 0xc000b250a0}, {0x9a9e020, 0xca100b8}, 0x0}, {{0x8fe90d1, 0xc}, ...}}, ...)
  #         github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza@v0.46.0/factory.go:81 +0x57d fp=0xc0005c4fb8 sp=0xc0005c4c98 pc=0x724a89d
  # go.opentelemetry.io/collector/component.CreateLogsReceiverFunc.CreateLogsReceiver(...)
  #         go.opentelemetry.io/collector@v0.46.0/component/receiver.go:191
  # go.opentelemetry.io/collector/component.(*receiverFactory).CreateLogsReceiver(0xc000ab2698?, {0x9acc778?, 0xc00012a000?}, {{0xc0000f5d40, {0x9a92fc0, 0xc000b250a0}, {0x9a9e020, 0xca100b8}, 0x0}, {{0x8fe90d1, ...}, ...}}, ...)
  #         <autogenerated>:1 +0xcb fp=0xc0005c5058 sp=0xc0005c4fb8 pc=0x44c1fab
  # go.opentelemetry.io/collector/service/internal/builder.attachReceiverToPipelines({0x9acc778, 0xc00012a000}, {{0xc0000f5d40, {0x9a92fc0, 0xc000b250a0}, {0x9a9e020, 0xca100b8}, 0x0}, {{0x8fe90d1, 0xc}, ...}}, ...)
  #         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:191 +0xc83 fp=0xc0005c5238 sp=0xc0005c5058 pc=0x7bd2583
  # go.opentelemetry.io/collector/service/internal/builder.(*receiversBuilder).buildReceiver(0xc0005c54f8, {0x9acc778, 0xc00012a000}, {{0xc0000f5d40, {0x9a92fc0, 0xc000b250a0}, {0x9a9e020, 0xca100b8}, 0x0}, {{0x8fe90d1, ...}, ...}}, ...)
  #         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:257 +0x325 fp=0xc0005c53f8 sp=0xc0005c5238 pc=0x7bd29a5
  # go.opentelemetry.io/collector/service/internal/builder.BuildReceivers({0xc0000f5680, {0x9a92fc0, 0xc000b250a0}, {0x9a9e020, 0xca100b8}, 0x0}, {{0x8fe90d1, 0xc}, {0x91094d4, 0x2f}, ...}, ...)
  #         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:109 +0x437 fp=0xc0005c5680 sp=0xc0005c53f8 pc=0x7bd1257
  # go.opentelemetry.io/collector/service.newService(0xc000fe3980)
  #         go.opentelemetry.io/collector@v0.46.0/service/service.go:74 +0x5ce fp=0xc0005c58a0 sp=0xc0005c5680 pc=0x7be8dae
  # go.opentelemetry.io/collector/service.(*Collector).setupConfigurationComponents(0xc00016e460, {0x9acc778, 0xc00012a000})
  #         go.opentelemetry.io/collector@v0.46.0/service/collector.go:200 +0x31b fp=0xc0005c5a28 sp=0xc0005c58a0 pc=0x7be679b
  # go.opentelemetry.io/collector/service.(*Collector).Run(0xc00016e460, {0x9acc778, 0xc00012a000})
  #         go.opentelemetry.io/collector@v0.46.0/service/collector.go:240 +0x24e fp=0xc0005c5b48 sp=0xc0005c5a28 pc=0x7be6aae
  # go.opentelemetry.io/collector/service.NewCommand.func1(0xc000a52280, {0x8fd4b1d?, 0x2?, 0x2?})
  #         go.opentelemetry.io/collector@v0.46.0/service/command.go:39 +0x10e fp=0xc0005c5be0 sp=0xc0005c5b48 pc=0x7be74ee
  # github.com/spf13/cobra.(*Command).execute(0xc000a52280, {0xc000124190, 0x2, 0x2})
  #         github.com/spf13/cobra@v1.3.0/command.go:856 +0x67c fp=0xc0005c5cb8 sp=0xc0005c5be0 pc=0x7bbcd5c
  # github.com/spf13/cobra.(*Command).ExecuteC(0xc000a52280)
  #         github.com/spf13/cobra@v1.3.0/command.go:974 +0x3b4 fp=0xc0005c5d70 sp=0xc0005c5cb8 pc=0x7bbd3d4
  # github.com/spf13/cobra.(*Command).Execute(...)
  #         github.com/spf13/cobra@v1.3.0/command.go:902
  # main.runInteractive({{0xc000f1a840, 0xc000f1bd70, 0xc000f1adb0, 0xc0009e7e60}, {{0x8fe90d1, 0xc}, {0x91094d4, 0x2f}, {0x905c397, 0x1c}}, ...})
  #         github.com/SumoLogic/sumologic-otel-collector/main.go:34 +0x5d fp=0xc0005c5e10 sp=0xc0005c5d70 pc=0x7beeabd
  # main.run(...)
  #         github.com/SumoLogic/sumologic-otel-collector/main_others.go:11
  # main.main()
  #         github.com/SumoLogic/sumologic-otel-collector/main.go:27 +0x1d8 fp=0xc0005c5f80 sp=0xc0005c5e10 pc=0x7bee9f8
  - gonum.org/v1/gonum => gonum.org/v1/gonum v0.11.0

  # This is to make sure we build the with the sumologicextension from the tree.
  # The reason this is needed is that sumologicexporter depends on sumologicextension in its go.mod.
  # We add a dependency in the builder config in this file but only for a particular (placeholder)
  # version which gets then translated into a replace in go.mod file.
  # This does not replace the version that sumologicexporter depends on.
  - github.com/SumoLogic/sumologic-otel-collector/pkg/extension/sumologicextension => ../../pkg/extension/sumologicextension
