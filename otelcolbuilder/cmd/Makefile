.PHONY: test
test:
# In order to prevent getting this error bump gonum to 0.11.0 in dynamically generated go.mod:
#
# unexpected fault address 0x1000000c000
# fatal error: fault
# [signal SIGSEGV: segmentation violation code=0x1 addr=0x1000000c000 pc=0x40120ca]

# goroutine 134 [running]:
# runtime.throw({0x8f8f991?, 0x709adcf?})
#         runtime/panic.go:992 +0x71 fp=0xc00139a910 sp=0xc00139a8e0 pc=0x4039eb1
# runtime.sigpanic()
#         runtime/signal_unix.go:825 +0x305 fp=0xc00139a960 sp=0xc00139a910 pc=0x4050385
# runtime.mapiternext(0xc000a632d0)
#         runtime/map.go:913 +0x18a fp=0xc00139a9d0 sp=0xc00139a960 pc=0x40120ca
# runtime.mapiterinit(0x0?, 0x87e5340?, 0xc00139aa28?)
#         runtime/map.go:861 +0x228 fp=0xc00139a9f0 sp=0xc00139a9d0 pc=0x4011ee8
# reflect.mapiterinit(0x84f8b40?, 0x7bf0f01?, 0xc00139aaa8?)
#         runtime/map.go:1373 +0x19 fp=0xc00139aa18 sp=0xc00139a9f0 pc=0x4066e19
# gonum.org/v1/gonum/graph/iterator.(*mapIter).next(0xc000a632e0)
#         gonum.org/v1/gonum@v0.9.3/graph/iterator/map.go:89 +0x5e fp=0xc00139aa38 sp=0xc00139aa18 pc=0x70a797e
# gonum.org/v1/gonum/graph/iterator.(*Nodes).NodeSlice(0xc000720a50)
#         gonum.org/v1/gonum@v0.9.3/graph/iterator/nodes_map.go:69 +0x8b fp=0xc00139aab8 sp=0xc00139aa38 pc=0x70a7c0b
# gonum.org/v1/gonum/graph.NodesOf({0x9a85d90, 0xc000720a50})
#         gonum.org/v1/gonum@v0.9.3/graph/nodes_edges.go:72 +0xb7 fp=0xc00139ab38 sp=0xc00139aab8 pc=0x70a4257
# gonum.org/v1/gonum/graph/topo.tarjanSCCstabilized({0x9a949c0, 0xc000e37b80}, 0x0)
#         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:97 +0x4c fp=0xc00139ac00 sp=0xc00139ab38 pc=0x71fbaac
# gonum.org/v1/gonum/graph/topo.TarjanSCC(...)
#         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:93
# gonum.org/v1/gonum/graph/topo.Sort({0x9a949c0?, 0xc000e37b80?})
#         gonum.org/v1/gonum@v0.9.3/graph/topo/tarjan.go:41 +0x25 fp=0xc00139ac30 sp=0xc00139ac00 pc=0x71fb465
# github.com/open-telemetry/opentelemetry-log-collection/pipeline.connectNodes(0xc000e37b80)
#         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/directed.go:134 +0x1ba fp=0xc00139ad20 sp=0xc00139ac30 pc=0x71fe1ba
# github.com/open-telemetry/opentelemetry-log-collection/pipeline.NewDirectedPipeline({0xc000e37b60, 0x2, 0x2})
#         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/directed.go:208 +0x15b fp=0xc00139ad88 sp=0xc00139ad20 pc=0x71ff15b
# github.com/open-telemetry/opentelemetry-log-collection/pipeline.Config.Build({{0x9a9f840, 0xc000df6990}, {0xc000a63200, 0x1, 0x1}}, 0x0?)
#         github.com/open-telemetry/opentelemetry-log-collection@v0.26.0/pipeline/config.go:83 +0x4c5 fp=0xc00139aef8 sp=0xc00139ad88 pc=0x71fcb45
# github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza.createLogsReceiver.func1({0x0?, 0x0?}, {{0xc001381d40, {0x9a47b60, 0xc0009665b0}, {0x9a52ac0, 0xc9946c0}, 0x0}, {{0x8f95fe7, 0x7}, ...}}, ...)
#         github.com/open-telemetry/opentelemetry-collector-contrib/internal/stanza@v0.46.0/factory.go:81 +0x57d fp=0xc00139b218 sp=0xc00139aef8 pc=0x72344fd
# go.opentelemetry.io/collector/component.CreateLogsReceiverFunc.CreateLogsReceiver(...)
#         go.opentelemetry.io/collector@v0.46.0/component/receiver.go:191
# go.opentelemetry.io/collector/component.(*receiverFactory).CreateLogsReceiver(0x0?, {0x9a811e0?, 0xc000126008?}, {{0xc001381d40, {0x9a47b60, 0xc0009665b0}, {0x9a52ac0, 0xc9946c0}, 0x0}, {{0x8f95fe7, ...}, ...}}, ...)
#         <autogenerated>:1 +0xcb fp=0xc00139b2b8 sp=0xc00139b218 pc=0x45208ab
# go.opentelemetry.io/collector/service/internal/builder.attachReceiverToPipelines({0x9a811e0, 0xc000126008}, {{0xc001381d40, {0x9a47b60, 0xc0009665b0}, {0x9a52ac0, 0xc9946c0}, 0x0}, {{0x8f95fe7, 0x7}, ...}}, ...)
#         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:191 +0xc83 fp=0xc00139b498 sp=0xc00139b2b8 pc=0x7bab143
# go.opentelemetry.io/collector/service/internal/builder.(*receiversBuilder).buildReceiver(0xc00139b758, {0x9a811e0, 0xc000126008}, {{0xc001381d40, {0x9a47b60, 0xc0009665b0}, {0x9a52ac0, 0xc9946c0}, 0x0}, {{0x8f95fe7, ...}, ...}}, ...)
#         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:257 +0x325 fp=0xc00139b658 sp=0xc00139b498 pc=0x7bab565
# go.opentelemetry.io/collector/service/internal/builder.BuildReceivers({0xc001381920, {0x9a47b60, 0xc0009665b0}, {0x9a52ac0, 0xc9946c0}, 0x0}, {{0x8f95fe7, 0x7}, {0x8ff057f, 0x17}, ...}, ...)
#         go.opentelemetry.io/collector@v0.46.0/service/internal/builder/receivers_builder.go:109 +0x437 fp=0xc00139b8e0 sp=0xc00139b658 pc=0x7ba9e17
# go.opentelemetry.io/collector/service.newService(0xc00139bbe0)
#         go.opentelemetry.io/collector@v0.46.0/service/service.go:74 +0x5ce fp=0xc00139bb00 sp=0xc00139b8e0 pc=0x7bc142e
# go.opentelemetry.io/collector/service.(*Collector).setupConfigurationComponents(0xc0009bc7e0, {0x9a811e0, 0xc000126008})
#         go.opentelemetry.io/collector@v0.46.0/service/collector.go:200 +0x31b fp=0xc00139bc88 sp=0xc00139bb00 pc=0x7bbf35b
# go.opentelemetry.io/collector/service.(*Collector).Run(0xc0009bc7e0, {0x9a811e0, 0xc000126008})
#         go.opentelemetry.io/collector@v0.46.0/service/collector.go:240 +0x24e fp=0xc00139bda8 sp=0xc00139bc88 pc=0x7bbf66e
# github.com/SumoLogic/sumologic-otel-collector.TestBuiltCollectorWithConfigurationFiles.func1(0xc000683860)
#         github.com/SumoLogic/sumologic-otel-collector/collector_config_test.go:115 +0x345 fp=0xc00139bf70 sp=0xc00139bda8 pc=0x7bc7ca5
	go get -v gonum.org/v1/gonum@v0.11.0
	go test $(FLAGS) -trimpath -count 1 -parallel 1 -tags enable_unstable ./...

.PHONY: test-v
test-v:
	@$(MAKE) test FLAGS=-v

# Don't lint the code generated with opentelemetry-collector-builder as it
# produces code that's not gofmt-ed:
#
# $ golangci-lint run --skip-files main.go .
# components.go:1: File is not `gofmt`-ed with `-s` (gofmt)
# $ golangci-lint run --skip-files components.go .
# main.go:1: File is not `gofmt`-ed with `-s` (gofmt)
.PHONY: lint
lint:
	golangci-lint run --skip-files '(components|main|main_others|main_windows).go' .
